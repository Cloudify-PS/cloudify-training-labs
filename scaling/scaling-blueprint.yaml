tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4.2/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.5/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.4/plugin.yaml

inputs:
  default_scale_count:
    type: integer
    description: Number of scale units to deploy by default
    default: 1
  vm_image_id:
    type: string
    description: ID of image to use when creating VM's
  vm_flavor:
    type: string
    description: ID of flavor to use when creating VM's
  webserver_port:
    type: integer
    description: The HTTP web server port
    default: 8080
  agent_user:
    type: string
    description: User name used when SSH-ing into the started machine

node_templates:
  floating_ip:
    type: cloudify.openstack.nodes.FloatingIP

  security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      description: Security group for Hello World VM
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: { get_property: [ http_web_server, port ] }

  vm:
    type: cloudify.openstack.nodes.Server
    properties:
      image: { get_input: vm_image_id }
      flavor: { get_input: vm_flavor }
    relationships:
      - type: cloudify.openstack.server_connected_to_floating_ip
        target: floating_ip
      - type: cloudify.openstack.server_connected_to_security_group
        target: security_group

  http_web_server:
    type: cloudify.nodes.WebServer
    properties:
      port: { get_input: webserver_port }
    relationships:
      - type: cloudify.relationships.contained_in
        target: vm
    interfaces:
      cloudify.interfaces.lifecycle:
        configure: scripts/configure.sh
        start: scripts/start.sh
        stop: scripts/stop.sh

outputs:
  http_endpoint:
    description: Web server external endpoint
    value: { concat: ['http://', { get_attribute: [floating_ip, floating_ip_address] },
                      ':', { get_property: [http_web_server, port] }] }

groups:
  vm_and_ip:
    members: [vm, floating_ip]

policies:
  scale_policy1:
    type: cloudify.policies.scaling
    properties:
      default_instances: { get_input: default_scale_count }
    targets: [vm_and_ip]
