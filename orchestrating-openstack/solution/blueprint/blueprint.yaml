tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.6/types.yaml
  - plugin:cloudify-openstack-plugin

inputs:
  keystone_username:
    default: ''
    type: string

  keystone_password:
    default: ''
    type: string

  keystone_tenant_name:
    default: ''
    type: string

  keystone_url:
    default: ''
    type: string

  region:
    default: ''
    type: string

  external_network_name:
    type: string

  router_name:
    type: string

  network_name:
    type: string

  cidr:
    type: string

  image:
    type: string

  flavor:
    type: string

  agent_install_method:
    type: string
    default: none

  agent_user:
    type: string
    default: ''

  agent_key:
    type: string
    default: ''

dsl_definitions:
  openstack_configuration: &openstack_configuration
    username: { get_input: keystone_username }
    password: { get_input: keystone_password }
    tenant_name: { get_input: keystone_tenant_name }
    auth_url: { get_input: keystone_url }
    region: { get_input: region }

node_templates:
  external_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_configuration
      use_external_resource: true
      resource_id: { get_input: external_network_name }

  router:
    type: cloudify.openstack.nodes.Router
    properties:
      openstack_config: *openstack_configuration
      resource_id: { get_input: router_name }
    relationships:
      - target: external_network
        type: cloudify.relationships.connected_to

  network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_configuration
      resource_id: { get_input: network_name }

  subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *openstack_configuration
      subnet:
        ip_version: 4
        cidr: { get_input: cidr }
    relationships:
      - target: network
        type: cloudify.relationships.contained_in
      - target: router
        type: cloudify.openstack.subnet_connected_to_router

  sg:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: *openstack_configuration
      rules:
        - port: 22
          remote_ip_prefix: 0.0.0.0/0

  port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_configuration
      resource_id: port
    relationships:
      - target: network
        type: cloudify.relationships.connected_to
      - target: subnet
        type: cloudify.openstack.port_connected_to_subnet
      - target: sg
        type: cloudify.openstack.port_connected_to_security_group

  keypair:
    type: cloudify.openstack.nodes.KeyPair
    properties:
      openstack_config: *openstack_configuration
      private_key_path: /tmp/key.pem

  server:
    type: cloudify.openstack.nodes.Server
    properties:
      openstack_config: *openstack_configuration
      image: { get_input: image }
      flavor: { get_input: flavor }
      agent_config:
        install_method: { get_input: agent_install_method }
        user: { get_input: agent_user }
        key: { get_input: agent_key }
    relationships:
      - target: port
        type: cloudify.openstack.server_connected_to_port
      - target: sg
        type: cloudify.openstack.server_connected_to_security_group
      - target: network
        type: cloudify.relationships.connected_to
      - target: keypair
        type: cloudify.openstack.server_connected_to_keypair
