tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.1.1/types.yaml

inputs:
  vm_ip_address:
    type: string
  port:
    type: integer
  download_path:
    type: string
  war_url:
    type: string
  war_filename:
    type: string
  java_url:
    type: string
  install_agent:
    type: boolean
  application_name:
    type: string

node_types:
  vm_host:
    derived_from: cloudify.nodes.Compute
    properties:
      ip:
        default: { get_input: vm_ip_address }
      install_agent:
        default: { get_input: install_agent }

  web_server:
    derived_from: cloudify.nodes.WebServer
    properties:
      download_path:
        type: string
        description: URL for the Tomcat installation tar.gz file
      war_url:
        type: string
        description: URL for the sample WAR file
      war_filename:
        type: string
        description: Name of the WAR file name (e.g. 'helloworld.war')
      java_url:
        type: string
        description: URL for the JDK installation tar.gz file
      application_name:
        type: string
        description: Application's name (e.g. 'helloworld')

node_templates:  
  tomcat_vm:
    type: vm_host
    instances:
      deploy: 1

  tomcat_server:
    type: web_server
    properties:
      port: { get_input: port }
      download_path: { get_input: download_path }
      war_url: { get_input: war_url }
      war_filename: { get_input: war_filename }
      java_url: { get_input: java_url }
      application_name: { get_input: application_name }
    interfaces:
      cloudify.interfaces.lifecycle:
        create: REPLACE_WITH_APPROPRIATE_SCRIPT
        configure:
          implementation: REPLACE_WITH_APPROPRIATE_SCRIPT
          inputs:
            process:
              args: [get_input: vm_ip_address]
        start: REPLACE_WITH_APPROPRIATE_SCRIPT
        stop: REPLACE_WITH_APPROPRIATE_SCRIPT
        delete: REPLACE_WITH_APPROPRIATE_SCRIPT

    relationships:
      - type: cloudify.relationships.contained_in
        target: tomcat_vm

outputs:
  endpoint:
    description: My application endpoint
    value:
      ip_address: { get_attribute: [ tomcat_vm, ip ] }
      port: { get_property: [ tomcat_server, port ] }
      application_url: { get_attribute: [tomcat_server, application_url] }
